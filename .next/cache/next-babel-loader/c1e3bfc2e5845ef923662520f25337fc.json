{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef, useEffect } from 'react';\nimport ImageGallery from '../../components/ImageGallery';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport useDimensions from \"react-cool-dimensions\";\nimport useWindowDimensions from '../../functions/useWindowDimensions';\nimport Footer from '../../components/Footer';\nimport PostCarousel from '../../components/PostCarousel';\n\nconst Post = ({\n  post,\n  carousel_data\n}) => {\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  const {\n    0: imagesHeight,\n    1: setImagesHeight\n  } = useState(null);\n  const {\n    0: bodyHeight,\n    1: setBodyHeight\n  } = useState(null);\n  const {\n    0: bodyPosition,\n    1: setBodyPosition\n  } = useState('fixed !important');\n  const {\n    0: bodyTop,\n    1: setBodyTop\n  } = useState(null);\n  const {\n    0: textBodyTop,\n    1: setTextBodyTop\n  } = useState({\n    top: 100\n  });\n  const {\n    ref,\n    width,\n    height,\n    entry,\n    unobserve,\n    observe\n  } = useDimensions({\n    onResize: ({\n      width,\n      height,\n      entry,\n      unobserve,\n      observe\n    }) => {// Triggered whenever the size of the target is changed\n    }\n  });\n  const {\n    windowHeight,\n    windowWidth\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (windowWidth < 576) {\n      setBodyPosition('static !important');\n    } else {\n      setBodyPosition('fixed !important');\n    }\n  }, [windowWidth]);\n\n  function getBodyTop() {\n    if (windowWidth < 576) {\n      return {\n        top: 0,\n        paddingRight: 15\n      };\n    } else {\n      if (-(textBodyTop + 30) + windowHeight > height) {\n        if (-(textBodyTop + 30) + windowHeight > imagesHeight) {\n          return {\n            top: -(height - (imagesHeight + textBodyTop)),\n            paddingRight: 50\n          };\n        } else {\n          return {\n            top: -(height - windowHeight),\n            paddingRight: 50\n          };\n        }\n      } else {\n        return {\n          top: textBodyTop + 30,\n          paddingRight: 50\n        };\n      }\n    }\n  }\n\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    setTextBodyTop(currPos.y);\n  }, [textBodyTop]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Container, {\n      className: \"post-container\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsxs(Col, {\n          ref: ref,\n          className: \"post-body\",\n          style: getBodyTop(),\n          sm: \"5\",\n          med: \"5\",\n          lg: \"5\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: _JSXStyle.dynamic([[\"1152529766\", [bodyPosition]]]) + \" \" + \"post-title\",\n            children: post.Title\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: _JSXStyle.dynamic([[\"1152529766\", [bodyPosition]]]) + \" \" + \"post-blurb\",\n            children: post.Tagline\n          }), windowWidth < 576 ? /*#__PURE__*/_jsx(\"img\", {\n            src: post.Heroes.Landscape.formats.small.url,\n            className: _JSXStyle.dynamic([[\"1152529766\", [bodyPosition]]])\n          }) : '', /*#__PURE__*/_jsx(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: post.Body\n            },\n            className: _JSXStyle.dynamic([[\"1152529766\", [bodyPosition]]]) + \" \" + \"post-text\"\n          })]\n        }), /*#__PURE__*/_jsx(_JSXStyle, {\n          id: \"1152529766\",\n          dynamic: [bodyPosition],\n          children: [`.post-body{position:${bodyPosition};}`]\n        }), /*#__PURE__*/_jsx(Col, {\n          sm: \"5\",\n          med: \"5\",\n          lg: \"5\"\n        }), /*#__PURE__*/_jsx(ImageGallery, {\n          post: post,\n          windowWidth: windowWidth,\n          setImagesHeight: setImagesHeight\n        }), /*#__PURE__*/_jsx(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          className: \"carousel-container\",\n          children: /*#__PURE__*/_jsx(PostCarousel, {\n            post_type: post.Type == 'Journal' ? 'photo journals' : 'itineraries',\n            posts: carousel_data\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Footer, {})]\n  });\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/posts?Slug=${context.params.slug}`);\n  const post_data = await res.json();\n  const carousel_res = await fetch(`${API_URL}/posts?Type=${post_data[0].Type}`);\n  const carousel_data = await carousel_res.json();\n  console.log(\"Carousel Data\");\n  console.log(carousel_data);\n  return {\n    props: {\n      post: post_data[0],\n      carousel_data: carousel_data\n    }\n  };\n}\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}