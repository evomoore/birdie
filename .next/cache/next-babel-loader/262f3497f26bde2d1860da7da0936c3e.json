{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js\";\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Post = ({\n  post\n}) => {\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"posts-container\",\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"post-body\",\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\",\n        children: post.Body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"7\",\n        med: \"7\",\n        lg: \"7\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"12\",\n          med: \"12\",\n          lg: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            fluid: true,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"5\",\n                med: \"5\",\n                lg: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"post-gallery\",\n                sm: \"7\",\n                med: \"7\",\n                lg: \"7\",\n                children: /*#__PURE__*/_jsxDEV(Container, {\n                  fluid: true,\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: post.Images.Image.map(image => {\n                      if (image.Orientation == 'Portrait') {\n                        var _image$Image;\n\n                        console.log(\"Image Object:\");\n                        console.log(image);\n                        return /*#__PURE__*/_jsxDEV(Col, {\n                          sm: \"6\",\n                          md: \"6\",\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: (_image$Image = image.Image) === null || _image$Image === void 0 ? void 0 : _image$Image.url\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 33,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 32,\n                          columnNumber: 31\n                        }, this);\n                      } else {\n                        var _image$Image2;\n\n                        /*#__PURE__*/\n                        _jsxDEV(Col, {\n                          sm: \"12\",\n                          md: \"12\",\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: (_image$Image2 = image.Image) === null || _image$Image2 === void 0 ? void 0 : _image$Image2.url\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 38,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 37,\n                          columnNumber: 31\n                        }, this);\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/photo-journals?Slug=${context.params.slug}`);\n  const post_data = await res.json();\n  return {\n    props: {\n      post: post_data[0]\n    }\n  };\n}\nexport default Post;","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js"],"names":["useRouter","Container","Row","Col","Post","post","router","slug","query","console","log","Body","Images","Image","map","image","Orientation","url","getServerSideProps","context","API_URL","process","env","res","fetch","params","post_data","json","props"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Post = ({ post }) => {\n  const router = useRouter()\n  const { slug } = router.query\n\n  console.log(post)\n  return (\n    <Container className=\"posts-container\" fluid>\n      <Row>\n        <Col className=\"post-body\" sm=\"5\" med=\"5\" lg=\"5\">\n          {post.Body}\n        </Col>\n        <Col sm=\"7\" med=\"7\" lg=\"7\">\n          <Col sm=\"12\" med=\"12\" lg=\"12\">\n            <Container fluid>\n              <Row>\n                <Col sm=\"5\" med=\"5\" lg=\"5\">\n                </Col>\n                <Col className=\"post-gallery\" sm=\"7\" med=\"7\" lg=\"7\">\n                  <Container fluid>\n                    <Row>\n                      {\n                        post.Images.Image.map(image => {\n                          if (image.Orientation == 'Portrait') {\n                            console.log(\"Image Object:\")\n                            console.log(image)\n                            return(\n                              <Col sm=\"6\" md=\"6\" lg=\"6\">\n                                <img src={image.Image?.url} />\n                              </Col>\n                            )\n                          } else {\n                              <Col sm=\"12\" md=\"12\" lg=\"12\">\n                                <img src={image.Image?.url} />\n                              </Col>\n                          }\n                        })\n                      }\n                    </Row>\n                  </Container>\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps(context)  {\n\n  const { API_URL } = process.env\n\n  const res = await fetch(`${API_URL}/photo-journals?Slug=${context.params.slug}`)\n  const post_data = await res.json()\n\n  return {\n    props: {\n      post: post_data[0]\n    }\n  }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}