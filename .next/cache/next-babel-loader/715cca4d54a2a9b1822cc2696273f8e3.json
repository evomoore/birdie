{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/destination/[slug].js\";\nimport ItemCarousel from '../../components/ItemCarousel';\nimport Footer from '../../components/Footer';\nimport PostList from '../../components/PostList';\nimport fetch from 'isomorphic-unfetch';\n\nconst Destination = ({\n  posts,\n  destinations\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      destinations: destinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemCarousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    API_URL\n  } = process.env;\n  let post_data;\n  const res = await fetch(`${API_URL}/destinations`);\n  const destination_data = await res.json();\n\n  if (destination_data[0].Level == 1) {\n    const res_posts = await fetch(`${API_URL}/posts?Destination.parent_destination=${destination_data[0].id}`);\n    post_data = await res_posts.json();\n  } else {\n    const res_posts = await fetch(`${API_URL}/posts?Destination.id=${destination_data[0].id}`);\n    post_data = await res_posts.json();\n  }\n\n  return {\n    props: {\n      posts: post_data,\n      destinations: destinations_data\n    }\n  };\n}\nexport default Destination;","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/destination/[slug].js"],"names":["ItemCarousel","Footer","PostList","fetch","Destination","posts","destinations","getServerSideProps","context","API_URL","process","env","post_data","res","destination_data","json","Level","res_posts","id","props","destinations_data"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6B;AAE/C,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAwB,MAAA,YAAY,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CATD;;AAWA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA4C;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAcC,OAAO,CAACC,GAA5B;AAEA,MAAIC,SAAJ;AAEA,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAE,GAAEM,OAAQ,eAAZ,CAAvB;AACA,QAAMK,gBAAgB,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAA/B;;AAEA,MAAID,gBAAgB,CAAC,CAAD,CAAhB,CAAoBE,KAApB,IAA6B,CAAjC,EAAoC;AAElC,UAAMC,SAAS,GAAG,MAAMd,KAAK,CAAE,GAAEM,OAAQ,yCAAwCK,gBAAgB,CAAC,CAAD,CAAhB,CAAoBI,EAAG,EAA3E,CAA7B;AACAN,IAAAA,SAAS,GAAG,MAAMK,SAAS,CAACF,IAAV,EAAlB;AAED,GALD,MAKO;AAEL,UAAME,SAAS,GAAG,MAAMd,KAAK,CAAE,GAAEM,OAAQ,yBAAwBK,gBAAgB,CAAC,CAAD,CAAhB,CAAoBI,EAAG,EAA3D,CAA7B;AACAN,IAAAA,SAAS,GAAG,MAAMK,SAAS,CAACF,IAAV,EAAlB;AAED;;AAED,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLd,MAAAA,KAAK,EAAEO,SADF;AAELN,MAAAA,YAAY,EAAEc;AAFT;AADF,GAAP;AAMD;AAED,eAAehB,WAAf","sourcesContent":["import ItemCarousel from '../../components/ItemCarousel'\nimport Footer from '../../components/Footer'\nimport PostList from '../../components/PostList'\nimport fetch from 'isomorphic-unfetch'\n\nconst Destination = ({ posts, destinations }) => {\n\n  return (\n    <>\n      <PostList posts={posts} destinations={destinations} />\n      <ItemCarousel />\n      <Footer />\n    </>\n  )\n}\n\nexport async function getServerSideProps(context)  {\n  const { API_URL } = process.env\n\n  let post_data;\n\n  const res = await fetch(`${API_URL}/destinations`)\n  const destination_data = await res.json()\n\n  if (destination_data[0].Level == 1) {\n\n    const res_posts = await fetch(`${API_URL}/posts?Destination.parent_destination=${destination_data[0].id}`)\n    post_data = await res_posts.json()\n\n  } else {\n\n    const res_posts = await fetch(`${API_URL}/posts?Destination.id=${destination_data[0].id}`)\n    post_data = await res_posts.json()\n\n  }\n\n  return {\n    props: {\n      posts: post_data,\n      destinations: destinations_data\n    }\n  }\n}\n\nexport default Destination\n"]},"metadata":{},"sourceType":"module"}