{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js\";\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport useDimensions from \"react-cool-dimensions\";\n\nconst Post = ({\n  post\n}) => {\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  const {\n    0: textBodyTop,\n    1: setTextBodyTop\n  } = useState({\n    top: 100\n  });\n  let ref = useRef();\n  const refObj = {\n    ref\n  };\n  const dimensions = useDimensions(refObj);\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    console.log('x:' + currPos.x + ' y: ' + currPos.y);\n    setTextBodyTop(currPos.y);\n  }, [textBodyTop]);\n  console.log(\"Top Position\");\n  console.log(textBodyTop);\n  console.log(\"Dimensions\");\n  console.log(dimensions);\n  console.log(reff);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"post-container\",\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"post-body\",\n        style: {\n          top: textBodyTop + 30\n        },\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Height: \", dimensions.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), post.Body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        ref: ref,\n        className: \"post-images\",\n        sm: \"7\",\n        med: \"7\",\n        lg: \"7\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"image-gallery\",\n          sm: \"12\",\n          med: \"12\",\n          lg: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            fluid: true,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: post.Images.Image.map(image => {\n                if (image.Orientation == 'Portrait') {\n                  var _image$Image;\n\n                  console.log(\"Image Object:\");\n                  console.log(image);\n                  return /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"gallery-image\",\n                    sm: \"6\",\n                    md: \"6\",\n                    lg: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: (_image$Image = image.Image) === null || _image$Image === void 0 ? void 0 : _image$Image.url\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  var _image$Image2;\n\n                  return /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"gallery-image\",\n                    sm: \"12\",\n                    md: \"12\",\n                    lg: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: (_image$Image2 = image.Image) === null || _image$Image2 === void 0 ? void 0 : _image$Image2.url\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/photo-journals?Slug=${context.params.slug}`);\n  const post_data = await res.json();\n  return {\n    props: {\n      post: post_data[0]\n    }\n  };\n}\nexport default Post;","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js"],"names":["useRouter","Container","Row","Col","React","useState","useRef","useScrollPosition","useDimensions","Post","post","router","slug","query","textBodyTop","setTextBodyTop","top","ref","refObj","dimensions","prevPos","currPos","console","log","x","y","reff","height","Body","Images","Image","map","image","Orientation","url","getServerSideProps","context","API_URL","process","env","res","fetch","params","post_data","json","props"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react'\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\nimport useDimensions from \"react-cool-dimensions\";\n\nconst Post = ({ post }) => {\n  const router = useRouter()\n  const { slug } = router.query\n\n  const [textBodyTop, setTextBodyTop] = useState({\n    top: 100\n  })\n\n  let ref = useRef();\n  const refObj = {\n    ref\n  }\n  const dimensions = useDimensions(refObj);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      console.log('x:' + currPos.x + ' y: ' + currPos.y)\n      setTextBodyTop(currPos.y)\n    },\n    [textBodyTop]\n  )\n\n  console.log(\"Top Position\")\n  console.log(textBodyTop)\n  console.log(\"Dimensions\")\n  console.log(dimensions)\n  console.log(reff)\n\n  return (\n    <Container className=\"post-container\" fluid>\n      <Row>\n        <Col className=\"post-body\" style={{ top: textBodyTop + 30 }} sm=\"5\" med=\"5\" lg=\"5\">\n          <p>Height: {dimensions.height}</p>\n          {post.Body}\n        </Col>\n        <Col sm=\"5\" med=\"5\" lg=\"5\">\n        </Col>\n        <Col ref={ref} className=\"post-images\" sm=\"7\" med=\"7\" lg=\"7\">\n          <Col className=\"image-gallery\" sm=\"12\" med=\"12\" lg=\"12\">\n            <Container fluid>\n              <Row>\n                {\n                  post.Images.Image.map(image => {\n                    if (image.Orientation == 'Portrait') {\n                      console.log(\"Image Object:\")\n                      console.log(image)\n                      return(\n                        <Col className=\"gallery-image\" sm=\"6\" md=\"6\" lg=\"6\">\n                          <img src={image.Image?.url} />\n                        </Col>\n                      )\n                    } else {\n                      return (\n                        <Col className=\"gallery-image\" sm=\"12\" md=\"12\" lg=\"12\">\n                          <img src={image.Image?.url} />\n                        </Col>\n                      )\n                    }\n                  })\n                }\n              </Row>\n            </Container>\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps(context)  {\n\n  const { API_URL } = process.env\n\n  const res = await fetch(`${API_URL}/photo-journals?Slug=${context.params.slug}`)\n  const post_data = await res.json()\n\n  return {\n    props: {\n      post: post_data[0]\n    }\n  }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}