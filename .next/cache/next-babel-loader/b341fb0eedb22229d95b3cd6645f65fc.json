{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  var _window = window,\n      windowWidth = _window.innerWidth,\n      windowHeight = _window.innerHeight;\n  return {\n    windowWidth: windowWidth,\n    windowHeight: windowHeight\n  };\n}\n\nexport default function useWindowDimensions() {\n  _s();\n\n  var _useState = useState(getWindowDimensions()),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/functions/useWindowDimensions.js"],"names":["useState","useEffect","getWindowDimensions","window","windowWidth","innerWidth","windowHeight","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,mBAAT,GAA+B;AAAA,gBACkCC,MADlC;AAAA,MACTC,WADS,WACrBC,UADqB;AAAA,MACiBC,YADjB,WACIC,WADJ;AAE7B,SAAO;AACLH,IAAAA,WAAW,EAAXA,WADK;AAELE,IAAAA,YAAY,EAAZA;AAFK,GAAP;AAID;;AAED,eAAe,SAASE,mBAAT,GAA+B;AAAA;;AAAA,kBACIR,QAAQ,CAACE,mBAAmB,EAApB,CADZ;AAAA,MACrCO,gBADqC;AAAA,MACnBC,mBADmB;;AAG5CT,EAAAA,SAAS,CAAC,YAAM;AACd,aAASU,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACD;;AAEDC,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD;;GAbuBD,mB","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n  return {\n    windowWidth,\n    windowHeight\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}