{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react';\nimport ImageGallery from '../../components/ImageGallery';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport useDimensions from \"react-cool-dimensions\";\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var router = useRouter();\n  var slug = router.query.slug;\n\n  var _useState = useState(null),\n      imagesHeight = _useState[0],\n      setImagesHeight = _useState[1];\n\n  var _useState2 = useState(null),\n      bodyHeight = _useState2[0],\n      setBodyHeight = _useState2[1];\n\n  var _useState3 = useState({\n    top: 100\n  }),\n      textBodyTop = _useState3[0],\n      setTextBodyTop = _useState3[1];\n\n  var _useDimensions = useDimensions({\n    onResize: function onResize(_ref2) {// Triggered whenever the size of the target is changed\n\n      var width = _ref2.width,\n          height = _ref2.height,\n          entry = _ref2.entry,\n          unobserve = _ref2.unobserve,\n          observe = _ref2.observe;\n    }\n  }),\n      ref = _useDimensions.ref,\n      width = _useDimensions.width,\n      height = _useDimensions.height,\n      entry = _useDimensions.entry,\n      unobserve = _useDimensions.unobserve,\n      observe = _useDimensions.observe;\n\n  var getBodyTop = function getBodyTop() {\n    return {\n      top: textBodyTop + 30\n    };\n  };\n\n  useScrollPosition(function (_ref3) {\n    var prevPos = _ref3.prevPos,\n        currPos = _ref3.currPos;\n    console.log('x:' + currPos.x + ' y: ' + currPos.y);\n    setTextBodyTop(currPos.y);\n  }, [textBodyTop]);\n  console.log(\"Top Position\");\n  console.log(textBodyTop);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"post-container\",\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        ref: ref,\n        className: \"post-body\",\n        style: getBodyTop(),\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Images Height: \", imagesHeight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Body Height: \", height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this), post.Body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        post: post,\n        setImagesHeight: setImagesHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Post, \"gYn8dpI4dtTTlwkb/90nu9kK4K8=\", false, function () {\n  return [useRouter, useDimensions, useScrollPosition];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js"],"names":["useRouter","Container","Row","Col","React","useState","useRef","ImageGallery","useScrollPosition","useDimensions","Post","post","router","slug","query","imagesHeight","setImagesHeight","bodyHeight","setBodyHeight","top","textBodyTop","setTextBodyTop","onResize","width","height","entry","unobserve","observe","ref","getBodyTop","prevPos","currPos","console","log","x","y","Body"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzB,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;AADyB,MAEjBa,IAFiB,GAERD,MAAM,CAACE,KAFC,CAEjBD,IAFiB;;AAAA,kBAGeR,QAAQ,CAAC,IAAD,CAHvB;AAAA,MAGlBU,YAHkB;AAAA,MAGJC,eAHI;;AAAA,mBAIWX,QAAQ,CAAC,IAAD,CAJnB;AAAA,MAIlBY,UAJkB;AAAA,MAINC,aAJM;;AAAA,mBAMab,QAAQ,CAAC;AAC7Cc,IAAAA,GAAG,EAAE;AADwC,GAAD,CANrB;AAAA,MAMlBC,WANkB;AAAA,MAMLC,cANK;;AAAA,uBAUiCZ,aAAa,CAAC;AACtEa,IAAAA,QAAQ,EAAE,yBAAkD,CAC1D;;AAD0D,UAA/CC,KAA+C,SAA/CA,KAA+C;AAAA,UAAxCC,MAAwC,SAAxCA,MAAwC;AAAA,UAAhCC,KAAgC,SAAhCA,KAAgC;AAAA,UAAzBC,SAAyB,SAAzBA,SAAyB;AAAA,UAAdC,OAAc,SAAdA,OAAc;AAE3D;AAHqE,GAAD,CAV9C;AAAA,MAUjBC,GAViB,kBAUjBA,GAViB;AAAA,MAUZL,KAVY,kBAUZA,KAVY;AAAA,MAULC,MAVK,kBAULA,MAVK;AAAA,MAUGC,KAVH,kBAUGA,KAVH;AAAA,MAUUC,SAVV,kBAUUA,SAVV;AAAA,MAUqBC,OAVrB,kBAUqBA,OAVrB;;AAgBzB,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAQ;AACNV,MAAAA,GAAG,EAAEC,WAAW,GAAG;AADb,KAAR;AAGD,GAJD;;AAMAZ,EAAAA,iBAAiB,CACf,iBAA0B;AAAA,QAAvBsB,OAAuB,SAAvBA,OAAuB;AAAA,QAAdC,OAAc,SAAdA,OAAc;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,OAAO,CAACG,CAAf,GAAmB,MAAnB,GAA4BH,OAAO,CAACI,CAAhD;AACAd,IAAAA,cAAc,CAACU,OAAO,CAACI,CAAT,CAAd;AACD,GAJc,EAKf,CAACf,WAAD,CALe,CAAjB;AAQAY,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAsC,IAAA,KAAK,MAA3C;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,GAAG,EAAEQ,GAAV;AAAe,QAAA,SAAS,EAAC,WAAzB;AAAqC,QAAA,KAAK,EAAEC,UAAU,EAAtD;AAA0D,QAAA,EAAE,EAAC,GAA7D;AAAiE,QAAA,GAAG,EAAC,GAArE;AAAyE,QAAA,EAAE,EAAC,GAA5E;AAAA,gCACE;AAAA,wCAAmBd,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,sCAAiBS,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGGb,IAAI,CAACyB,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,GAAG,EAAC,GAAhB;AAAoB,QAAA,EAAE,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,eANF,eAQE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEzB,IAApB;AAA0B,QAAA,eAAe,EAAEK;AAA3C;AAAA;AAAA;AAAA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CA/CD;;GAAMN,I;UACWV,S,EAS2CS,a,EAY1DD,iB;;;KAtBIE,I;;AA+DN,eAAeA,IAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react'\nimport ImageGallery from '../../components/ImageGallery'\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\nimport useDimensions from \"react-cool-dimensions\";\n\nconst Post = ({ post }) => {\n  const router = useRouter()\n  const { slug } = router.query\n  const [imagesHeight, setImagesHeight] = useState(null)\n  const [bodyHeight, setBodyHeight] = useState(null)\n\n  const [textBodyTop, setTextBodyTop] = useState({\n    top: 100\n  })\n\n  const { ref, width, height, entry, unobserve, observe } = useDimensions({\n    onResize: ({ width, height, entry, unobserve, observe }) => {\n      // Triggered whenever the size of the target is changed\n    },\n  });\n\n  const getBodyTop = () => {\n    return ({\n      top: textBodyTop + 30\n    })\n  }\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      console.log('x:' + currPos.x + ' y: ' + currPos.y)\n      setTextBodyTop(currPos.y)\n    },\n    [textBodyTop]\n  )\n\n  console.log(\"Top Position\")\n  console.log(textBodyTop)\n\n  return (\n    <Container className=\"post-container\" fluid>\n      <Row>\n        <Col ref={ref} className=\"post-body\" style={getBodyTop()} sm=\"5\" med=\"5\" lg=\"5\">\n          <p>Images Height: {imagesHeight}</p>\n          <p>Body Height: {height}</p>\n          {post.Body}\n        </Col>\n        <Col sm=\"5\" med=\"5\" lg=\"5\">\n        </Col>\n        <ImageGallery post={post} setImagesHeight={setImagesHeight} />\n      </Row>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps(context)  {\n\n  const { API_URL } = process.env\n\n  const res = await fetch(`${API_URL}/photo-journals?Slug=${context.params.slug}`)\n  const post_data = await res.json()\n\n  return {\n    props: {\n      post: post_data[0]\n    }\n  }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}