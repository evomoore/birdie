{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef, useEffect } from 'react';\nimport ImageGallery from '../../components/ImageGallery';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport useDimensions from \"react-cool-dimensions\";\nimport useWindowDimensions from '../../functions/useWindowDimensions';\nimport Footer from '../../components/Footer';\nimport PostCarousel from '../../components/PostCarousel';\n\nvar Post = function Post(_ref) {\n  var post = _ref.post;\n  var router = useRouter();\n  var slug = router.query.slug;\n\n  var _useState = useState(null),\n      imagesHeight = _useState[0],\n      setImagesHeight = _useState[1];\n\n  var _useState2 = useState(null),\n      bodyHeight = _useState2[0],\n      setBodyHeight = _useState2[1];\n\n  var _useState3 = useState({\n    top: 100\n  }),\n      textBodyTop = _useState3[0],\n      setTextBodyTop = _useState3[1];\n\n  var _useDimensions = useDimensions({\n    onResize: function onResize(_ref2) {// Triggered whenever the size of the target is changed\n\n      var width = _ref2.width,\n          height = _ref2.height,\n          entry = _ref2.entry,\n          unobserve = _ref2.unobserve,\n          observe = _ref2.observe;\n    }\n  }),\n      ref = _useDimensions.ref,\n      width = _useDimensions.width,\n      height = _useDimensions.height,\n      entry = _useDimensions.entry,\n      unobserve = _useDimensions.unobserve,\n      observe = _useDimensions.observe;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      windowHeight = _useWindowDimensions.windowHeight,\n      windowWidth = _useWindowDimensions.windowWidth;\n\n  var getBodyTop = function getBodyTop() {\n    if (-(textBodyTop + 30) + windowHeight > height) {\n      if (-(textBodyTop + 30) + windowHeight > imagesHeight) {\n        return {\n          top: -(height - (imagesHeight + textBodyTop))\n        };\n      } else {\n        return {\n          top: -(height - windowHeight)\n        };\n      }\n    } else {\n      return {\n        top: textBodyTop + 30\n      };\n    }\n  };\n\n  useScrollPosition(function (_ref3) {\n    var prevPos = _ref3.prevPos,\n        currPos = _ref3.currPos;\n    console.log('x:' + currPos.x + ' y: ' + currPos.y);\n    setTextBodyTop(currPos.y);\n  }, [textBodyTop]);\n  console.log(\"Top Position\");\n  console.log(textBodyTop);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Container, {\n      className: \"post-container\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsxs(Col, {\n          ref: ref,\n          className: \"post-body\",\n          style: getBodyTop(),\n          sm: \"5\",\n          med: \"5\",\n          lg: \"5\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"post-title\",\n            children: post.Title\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"post-blurb\",\n            children: post.Tagline\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"post-text\",\n            dangerouslySetInnerHTML: {\n              __html: post.Body\n            }\n          })]\n        }), /*#__PURE__*/_jsx(Col, {\n          sm: \"5\",\n          med: \"5\",\n          lg: \"5\"\n        }), /*#__PURE__*/_jsx(ImageGallery, {\n          post: post,\n          setImagesHeight: setImagesHeight\n        }), /*#__PURE__*/_jsx(PostCarousel, {})]\n      })\n    }), /*#__PURE__*/_jsx(Footer, {})]\n  });\n};\n\nexport var __N_SSP = true;\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}