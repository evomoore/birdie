{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/components/ImageGallery.js\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react';\nimport useDimensions from \"react-cool-dimensions\";\nimport GalleryImage from '../components/GalleryImage';\n\nconst ImageGallery = ({\n  post,\n  windowWidth,\n  setImagesHeight,\n  hero\n}) => {\n  var _post$Heroes$Landscap;\n\n  const {\n    ref,\n    width,\n    height,\n    entry,\n    unobserve,\n    observe\n  } = useDimensions({\n    onResize: ({\n      width,\n      height,\n      entry,\n      unobserve,\n      observe\n    }) => {\n      // Triggered whenever the size of the target is changed\n      setImagesHeight(height);\n    }\n  });\n  const {\n    0: captionVisibility,\n    1: setCaptionVisibility\n  } = useState('hidden');\n  let key_counter = 0;\n  return /*#__PURE__*/_jsxDEV(Col, {\n    ref: ref,\n    className: \"post-images\",\n    sm: \"8\",\n    med: \"8\",\n    lg: \"8\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"image-gallery\",\n      sm: \"12\",\n      med: \"12\",\n      lg: \"12\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [windowWidth > 576 ? /*#__PURE__*/_jsxDEV(GalleryImage, {\n            image: hero,\n            orientation: 'Landscape',\n            caption: (_post$Heroes$Landscap = post.Heroes.Landscape) === null || _post$Heroes$Landscap === void 0 ? void 0 : _post$Heroes$Landscap.caption\n          }, key_counter, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 36\n          }, this) : '', post.Images.Image.map(image => {\n            key_counter++;\n            return /*#__PURE__*/_jsxDEV(GalleryImage, {\n              image: image.Image.formats.medium.url,\n              orientation: image.Orientation,\n              caption: image.Caption\n            }, key_counter, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ImageGallery;","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/components/ImageGallery.js"],"names":["Container","Row","Col","React","useState","useRef","useDimensions","GalleryImage","ImageGallery","post","windowWidth","setImagesHeight","hero","ref","width","height","entry","unobserve","observe","onResize","captionVisibility","setCaptionVisibility","key_counter","Heroes","Landscape","caption","Images","Image","map","image","formats","medium","url","Orientation","Caption"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,eAArB;AAAsCC,EAAAA;AAAtC,CAAD,KAAkD;AAAA;;AACrE,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAoDZ,aAAa,CAAC;AACtEa,IAAAA,QAAQ,EAAE,CAAC;AAAEL,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA;AAAnC,KAAD,KAAkD;AAC1D;AACAP,MAAAA,eAAe,CAACI,MAAD,CAAf;AACD;AAJqE,GAAD,CAAvE;AAOA,QAAM;AAAA,OAACK,iBAAD;AAAA,OAAoBC;AAApB,MAA4CjB,QAAQ,CAAC,QAAD,CAA1D;AAEA,MAAIkB,WAAW,GAAG,CAAlB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,GAAG,EAAET,GAAV;AAAe,IAAA,SAAS,EAAC,aAAzB;AAAuC,IAAA,EAAE,EAAC,GAA1C;AAA8C,IAAA,GAAG,EAAC,GAAlD;AAAsD,IAAA,EAAE,EAAC,GAAzD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAC,IAAlC;AAAuC,MAAA,GAAG,EAAC,IAA3C;AAAgD,MAAA,EAAE,EAAC,IAAnD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,+BACE,QAAC,GAAD;AAAA,qBACIH,WAAW,GAAG,GAAf,gBAAsB,QAAC,YAAD;AAAgC,YAAA,KAAK,EAAEE,IAAvC;AAA6C,YAAA,WAAW,EAAE,WAA1D;AAAuE,YAAA,OAAO,2BAAEH,IAAI,CAACc,MAAL,CAAYC,SAAd,0DAAE,sBAAuBC;AAAvG,aAAmBH,WAAnB;AAAA;AAAA;AAAA;AAAA,kBAAtB,GAA2I,EAD9I,EAGIb,IAAI,CAACiB,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,KAAK,IAAI;AAC7BP,YAAAA,WAAW;AACX,gCACE,QAAC,YAAD;AAAgC,cAAA,KAAK,EAAEO,KAAK,CAACF,KAAN,CAAYG,OAAZ,CAAoBC,MAApB,CAA2BC,GAAlE;AAAuE,cAAA,WAAW,EAAEH,KAAK,CAACI,WAA1F;AAAuG,cAAA,OAAO,EAAEJ,KAAK,CAACK;AAAtH,eAAmBZ,WAAnB;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD,WALD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/BD;;AAiCA,eAAed,YAAf","sourcesContent":["import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react'\nimport useDimensions from \"react-cool-dimensions\";\nimport GalleryImage from '../components/GalleryImage'\n\nconst ImageGallery = ({ post, windowWidth, setImagesHeight, hero }) => {\n  const { ref, width, height, entry, unobserve, observe } = useDimensions({\n    onResize: ({ width, height, entry, unobserve, observe }) => {\n      // Triggered whenever the size of the target is changed\n      setImagesHeight(height)\n    },\n  });\n\n  const [captionVisibility, setCaptionVisibility] = useState('hidden')\n\n  let key_counter = 0;\n\n  return (\n    <Col ref={ref} className=\"post-images\" sm=\"8\" med=\"8\" lg=\"8\">\n      <Col className=\"image-gallery\" sm=\"12\" med=\"12\" lg=\"12\">\n        <Container fluid>\n          <Row>\n            {(windowWidth > 576) ? <GalleryImage key={key_counter} image={hero} orientation={'Landscape'} caption={post.Heroes.Landscape?.caption} /> : ''}\n            {\n              post.Images.Image.map(image => {\n                key_counter++\n                return (\n                  <GalleryImage key={key_counter} image={image.Image.formats.medium.url} orientation={image.Orientation} caption={image.Caption} />\n                )\n              })\n            }\n          </Row>\n        </Container>\n      </Col>\n    </Col>\n  )\n}\n\nexport default ImageGallery\n"]},"metadata":{},"sourceType":"module"}