{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/components/ImageGallery.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react';\nimport useDimensions from \"react-cool-dimensions\";\nimport GalleryImage from '../components/GalleryImage';\n\nvar ImageGallery = function ImageGallery(_ref) {\n  _s();\n\n  var _post$Heroes$Landscap;\n\n  var post = _ref.post,\n      windowWidth = _ref.windowWidth,\n      setImagesHeight = _ref.setImagesHeight,\n      hero = _ref.hero;\n\n  var _useDimensions = useDimensions({\n    onResize: function onResize(_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height,\n          entry = _ref2.entry,\n          unobserve = _ref2.unobserve,\n          observe = _ref2.observe;\n      // Triggered whenever the size of the target is changed\n      setImagesHeight(height);\n    }\n  }),\n      ref = _useDimensions.ref,\n      width = _useDimensions.width,\n      height = _useDimensions.height,\n      entry = _useDimensions.entry,\n      unobserve = _useDimensions.unobserve,\n      observe = _useDimensions.observe;\n\n  var _useState = useState('hidden'),\n      captionVisibility = _useState[0],\n      setCaptionVisibility = _useState[1];\n\n  var key_counter = 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: \"4\",\n      med: \"4\",\n      lg: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), windowWidth > 576 ? /*#__PURE__*/_jsxDEV(Col, {\n      ref: ref,\n      className: \"post-images\",\n      sm: \"8\",\n      med: \"8\",\n      lg: \"8\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"image-gallery\",\n        sm: \"12\",\n        med: \"12\",\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(GalleryImage, {\n              image: hero,\n              orientation: 'Landscape',\n              caption: post.Heroes.Landscape.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 170\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 165\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 148\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 92\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 31\n    }, _this) : '', /*#__PURE__*/_jsxDEV(Col, {\n      ref: ref,\n      className: \"post-images\",\n      sm: \"8\",\n      med: \"8\",\n      lg: \"8\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"image-gallery\",\n        sm: \"12\",\n        med: \"12\",\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [windowWidth > 576 ? /*#__PURE__*/_jsxDEV(GalleryImage, {\n              image: hero,\n              orientation: 'Landscape',\n              caption: (_post$Heroes$Landscap = post.Heroes.Landscape) === null || _post$Heroes$Landscap === void 0 ? void 0 : _post$Heroes$Landscap.caption\n            }, key_counter, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 38\n            }, _this) : '', post.Images.Image.map(function (image) {\n              key_counter++;\n              return /*#__PURE__*/_jsxDEV(GalleryImage, {\n                image: image.Image.formats.medium.url,\n                orientation: image.Orientation,\n                caption: image.Caption\n              }, key_counter, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ImageGallery, \"kU5ARonWg9jMeEn3ev4lhIeyjhE=\", false, function () {\n  return [useDimensions];\n});\n\n_c = ImageGallery;\nexport default ImageGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/components/ImageGallery.js"],"names":["Container","Row","Col","React","useState","useRef","useDimensions","GalleryImage","ImageGallery","post","windowWidth","setImagesHeight","hero","onResize","width","height","entry","unobserve","observe","ref","captionVisibility","setCaptionVisibility","key_counter","Heroes","Landscape","caption","Images","Image","map","image","formats","medium","url","Orientation","Caption"],"mappings":"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","sourcesContent":["import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react'\nimport useDimensions from \"react-cool-dimensions\";\nimport GalleryImage from '../components/GalleryImage'\n\nconst ImageGallery = ({ post, windowWidth, setImagesHeight, hero }) => {\n  const { ref, width, height, entry, unobserve, observe } = useDimensions({\n    onResize: ({ width, height, entry, unobserve, observe }) => {\n      // Triggered whenever the size of the target is changed\n      setImagesHeight(height)\n    },\n  });\n\n  const [captionVisibility, setCaptionVisibility] = useState('hidden')\n\n  let key_counter = 0;\n\n  return (\n    <>\n      <Col sm=\"4\" med=\"4\" lg=\"4\">\n      </Col>\n      {\n        (windowWidth > 576) ? <Col ref={ref} className=\"post-images\" sm=\"8\" med=\"8\" lg=\"8\"><Col className=\"image-gallery\" sm=\"12\" med=\"12\" lg=\"12\"><Container fluid><Row><GalleryImage image={hero} orientation={'Landscape'} caption={post.Heroes.Landscape.caption} /></Row></Container></Col></Col> : ''\n      }\n      <Col ref={ref} className=\"post-images\" sm=\"8\" med=\"8\" lg=\"8\">\n        <Col className=\"image-gallery\" sm=\"12\" med=\"12\" lg=\"12\">\n          <Container fluid>\n            <Row>\n              {(windowWidth > 576) ? <GalleryImage key={key_counter} image={hero} orientation={'Landscape'} caption={post.Heroes.Landscape?.caption} /> : ''}\n              {\n                post.Images.Image.map(image => {\n                  key_counter++\n                  return (\n                    <GalleryImage key={key_counter} image={image.Image.formats.medium.url} orientation={image.Orientation} caption={image.Caption} />\n                  )\n                })\n              }\n            </Row>\n          </Container>\n        </Col>\n      </Col>\n    </>\n  )\n}\n\nexport default ImageGallery\n"]},"metadata":{},"sourceType":"module"}