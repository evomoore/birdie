{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react';\nimport ImageGallery from '../../components/ImageGallery';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var router = useRouter();\n  var slug = router.query.slug;\n\n  var _useState = useState(null),\n      imagesHeight = _useState[0],\n      setImagesHeight = _useState[1];\n\n  var _useState2 = useState({\n    top: 100\n  }),\n      textBodyTop = _useState2[0],\n      setTextBodyTop = _useState2[1];\n\n  useScrollPosition(function (_ref2) {\n    var prevPos = _ref2.prevPos,\n        currPos = _ref2.currPos;\n    console.log('x:' + currPos.x + ' y: ' + currPos.y);\n    setTextBodyTop(currPos.y);\n  }, [textBodyTop]);\n  console.log(\"Top Position\");\n  console.log(textBodyTop);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"post-container\",\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"post-body\",\n        style: {\n          top: textBodyTop + 30\n        },\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Height: \", imagesHeight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this), post.Body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        post: post,\n        setImagesHeight: setImagesHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Post, \"JFnTAg3WzLi5wCGaWBUkjtDio6I=\", false, function () {\n  return [useRouter, useScrollPosition];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js"],"names":["useRouter","Container","Row","Col","React","useState","useRef","ImageGallery","useScrollPosition","Post","post","router","slug","query","imagesHeight","setImagesHeight","top","textBodyTop","setTextBodyTop","prevPos","currPos","console","log","x","y","Body"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzB,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AADyB,MAEjBY,IAFiB,GAERD,MAAM,CAACE,KAFC,CAEjBD,IAFiB;;AAAA,kBAGeP,QAAQ,CAAC,IAAD,CAHvB;AAAA,MAGlBS,YAHkB;AAAA,MAGJC,eAHI;;AAAA,mBAKaV,QAAQ,CAAC;AAC7CW,IAAAA,GAAG,EAAE;AADwC,GAAD,CALrB;AAAA,MAKlBC,WALkB;AAAA,MAKLC,cALK;;AASzBV,EAAAA,iBAAiB,CACf,iBAA0B;AAAA,QAAvBW,OAAuB,SAAvBA,OAAuB;AAAA,QAAdC,OAAc,SAAdA,OAAc;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,OAAO,CAACG,CAAf,GAAmB,MAAnB,GAA4BH,OAAO,CAACI,CAAhD;AACAN,IAAAA,cAAc,CAACE,OAAO,CAACI,CAAT,CAAd;AACD,GAJc,EAKf,CAACP,WAAD,CALe,CAAjB;AAQAI,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAsC,IAAA,KAAK,MAA3C;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAED,UAAAA,GAAG,EAAEC,WAAW,GAAG;AAArB,SAAlC;AAA6D,QAAA,EAAE,EAAC,GAAhE;AAAoE,QAAA,GAAG,EAAC,GAAxE;AAA4E,QAAA,EAAE,EAAC,GAA/E;AAAA,gCACE;AAAA,iCAAYH,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGJ,IAAI,CAACe,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAKE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,GAAG,EAAC,GAAhB;AAAoB,QAAA,EAAE,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,eALF,eAOE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEf,IAApB;AAA0B,QAAA,eAAe,EAAEK;AAA3C;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CAjCD;;GAAMN,I;UACWT,S,EAQfQ,iB;;;KATIC,I;;AAiDN,eAAeA,IAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef } from 'react'\nimport ImageGallery from '../../components/ImageGallery'\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\n\nconst Post = ({ post }) => {\n  const router = useRouter()\n  const { slug } = router.query\n  const [imagesHeight, setImagesHeight] = useState(null)\n\n  const [textBodyTop, setTextBodyTop] = useState({\n    top: 100\n  })\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      console.log('x:' + currPos.x + ' y: ' + currPos.y)\n      setTextBodyTop(currPos.y)\n    },\n    [textBodyTop]\n  )\n\n  console.log(\"Top Position\")\n  console.log(textBodyTop)\n\n  return (\n    <Container className=\"post-container\" fluid>\n      <Row>\n        <Col className=\"post-body\" style={{ top: textBodyTop + 30 }} sm=\"5\" med=\"5\" lg=\"5\">\n          <p>Height: {imagesHeight}</p>\n          {post.Body}\n        </Col>\n        <Col sm=\"5\" med=\"5\" lg=\"5\">\n        </Col>\n        <ImageGallery post={post} setImagesHeight={setImagesHeight} />\n      </Row>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps(context)  {\n\n  const { API_URL } = process.env\n\n  const res = await fetch(`${API_URL}/photo-journals?Slug=${context.params.slug}`)\n  const post_data = await res.json()\n\n  return {\n    props: {\n      post: post_data[0]\n    }\n  }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}