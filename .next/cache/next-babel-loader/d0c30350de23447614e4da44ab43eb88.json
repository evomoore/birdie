{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef, useEffect } from 'react';\nimport ImageGallery from '../../components/ImageGallery';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport useDimensions from \"react-cool-dimensions\";\nimport useWindowDimensions from '../../functions/useWindowDimensions';\nimport Footer from '../components/Footer';\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var router = useRouter();\n  var slug = router.query.slug;\n\n  var _useState = useState(null),\n      imagesHeight = _useState[0],\n      setImagesHeight = _useState[1];\n\n  var _useState2 = useState(null),\n      bodyHeight = _useState2[0],\n      setBodyHeight = _useState2[1];\n\n  var _useState3 = useState({\n    top: 100\n  }),\n      textBodyTop = _useState3[0],\n      setTextBodyTop = _useState3[1];\n\n  var _useDimensions = useDimensions({\n    onResize: function onResize(_ref2) {// Triggered whenever the size of the target is changed\n\n      var width = _ref2.width,\n          height = _ref2.height,\n          entry = _ref2.entry,\n          unobserve = _ref2.unobserve,\n          observe = _ref2.observe;\n    }\n  }),\n      ref = _useDimensions.ref,\n      width = _useDimensions.width,\n      height = _useDimensions.height,\n      entry = _useDimensions.entry,\n      unobserve = _useDimensions.unobserve,\n      observe = _useDimensions.observe;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      windowHeight = _useWindowDimensions.windowHeight,\n      windowWidth = _useWindowDimensions.windowWidth;\n\n  var getBodyTop = function getBodyTop() {\n    if (-(textBodyTop + 30) + windowHeight > height) {\n      if (-(textBodyTop + 30) + windowHeight > imagesHeight) {\n        return {\n          top: -(height - (imagesHeight + textBodyTop))\n        };\n      } else {\n        return {\n          top: -(height - windowHeight)\n        };\n      }\n    } else {\n      return {\n        top: textBodyTop + 30\n      };\n    }\n  };\n\n  useScrollPosition(function (_ref3) {\n    var prevPos = _ref3.prevPos,\n        currPos = _ref3.currPos;\n    console.log('x:' + currPos.x + ' y: ' + currPos.y);\n    setTextBodyTop(currPos.y);\n  }, [textBodyTop]);\n  console.log(\"Top Position\");\n  console.log(textBodyTop);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"post-container\",\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        ref: ref,\n        className: \"post-body\",\n        style: getBodyTop(),\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-title\",\n          children: post.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-blurb\",\n          children: post.Tagline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-text\",\n          dangerouslySetInnerHTML: {\n            __html: post.Body\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"5\",\n        med: \"5\",\n        lg: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        post: post,\n        setImagesHeight: setImagesHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Post, \"ksjpW35Us5+WDIeDzIU/tDG8lVw=\", false, function () {\n  return [useRouter, useDimensions, useWindowDimensions, useScrollPosition];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/a206613345/Desktop/Birdie/birdie-site/birdie-frontend/birdie-app/pages/post/[slug].js"],"names":["useRouter","Container","Row","Col","React","useState","useRef","useEffect","ImageGallery","useScrollPosition","useDimensions","useWindowDimensions","Footer","Post","post","router","slug","query","imagesHeight","setImagesHeight","bodyHeight","setBodyHeight","top","textBodyTop","setTextBodyTop","onResize","width","height","entry","unobserve","observe","ref","windowHeight","windowWidth","getBodyTop","prevPos","currPos","console","log","x","y","Title","Tagline","__html","Body"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useState, useRef, useEffect } from 'react'\nimport ImageGallery from '../../components/ImageGallery'\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\nimport useDimensions from \"react-cool-dimensions\";\nimport useWindowDimensions from '../../functions/useWindowDimensions'\nimport Footer from '../components/Footer'\n\nconst Post = ({ post }) => {\n  const router = useRouter()\n  const { slug } = router.query\n  const [imagesHeight, setImagesHeight] = useState(null)\n  const [bodyHeight, setBodyHeight] = useState(null)\n\n  const [textBodyTop, setTextBodyTop] = useState({\n    top: 100\n  })\n\n  const { ref, width, height, entry, unobserve, observe } = useDimensions({\n    onResize: ({ width, height, entry, unobserve, observe }) => {\n      // Triggered whenever the size of the target is changed\n    },\n  });\n\n  const { windowHeight, windowWidth } = useWindowDimensions();\n\n  const getBodyTop = () => {\n    if ((-(textBodyTop + 30) + windowHeight) > height) {\n      if ((-(textBodyTop + 30) + windowHeight) > imagesHeight) {\n        return ({\n          top: -(height - (imagesHeight + textBodyTop))\n        })\n      } else {\n        return ({\n          top: -(height - windowHeight)\n        })\n      }\n    } else {\n      return ({\n        top: textBodyTop + 30\n      })\n    }\n  }\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      console.log('x:' + currPos.x + ' y: ' + currPos.y)\n      setTextBodyTop(currPos.y)\n    },\n    [textBodyTop]\n  )\n\n  console.log(\"Top Position\")\n  console.log(textBodyTop)\n\n  return (\n    <Container className=\"post-container\" fluid>\n      <Row>\n        <Col ref={ref} className=\"post-body\" style={getBodyTop()} sm=\"5\" med=\"5\" lg=\"5\">\n          <p className=\"post-title\">{post.Title}</p>\n          <p className=\"post-blurb\">{post.Tagline}</p>\n          <div className=\"post-text\" dangerouslySetInnerHTML={{__html:post.Body}}>\n          </div>\n        </Col>\n        <Col sm=\"5\" med=\"5\" lg=\"5\">\n        </Col>\n        <ImageGallery post={post} setImagesHeight={setImagesHeight} />\n      </Row>\n      <Row>\n        <Col>\n          <h1>Footer</h1>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps(context)  {\n\n  const { API_URL } = process.env\n\n  const res = await fetch(`${API_URL}/photo-journals?Slug=${context.params.slug}`)\n  const post_data = await res.json()\n\n  return {\n    props: {\n      post: post_data[0]\n    }\n  }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}